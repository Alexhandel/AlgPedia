ABOUT
Fourier–Motzkin elimination, also known as the FME method, is a mathematical algorithm for eliminating variables from a system of linear inequalities. It can output real solutions.
FULL TEXT
Fourier–Motzkin elimination, also known as the FME method, is a mathematical algorithm for eliminating variables from a system of linear inequalities. It can output real solutions.
The algorithm is named after Joseph Fourier and Theodore Motzkin.


The elimination of a set of variables, say V, from a system of relations (here linear inequalities) refers to the creation of another system of the same sort, but without the variables in V, such that both systems have the same solutions over the remaining variables.
If all variables are eliminated from a system of linear inequalities, then one obtains a system of constant inequalities. It is then trivial to decide whether the resulting system is true or false. It is true if and only if the original system has solutions. As a consequence, elimination of all variables can be used to detect whether a system of inequalities has solutions or not.
Consider a system 



S


{\displaystyle S}

 of 



n


{\displaystyle n}

 inequalities with 



r


{\displaystyle r}

 variables 




x

1




{\displaystyle x_{1}}

 to 




x

r




{\displaystyle x_{r}}

, with 




x

r




{\displaystyle x_{r}}

 the variable to be eliminated. The linear inequalities in the system can be grouped into three classes depending on the sign (positive, negative or null) of the coefficient for 




x

r




{\displaystyle x_{r}}

.
The original system is thus equivalent to
Elimination consists in producing a system equivalent to 



∃

x

r


 
S


{\displaystyle \exists x_{r}~S}

. Obviously, this formula is equivalent to
The inequality
is equivalent to 




n

A



n

B




{\displaystyle n_{A}n_{B}}

 inequalities 




A

i


(

x

1


,
…
,

x

r
−
1


)
≤

B

j


(

x

1


,
…
,

x

r
−
1


)


{\displaystyle A_{i}(x_{1},\dots ,x_{r-1})\leq B_{j}(x_{1},\dots ,x_{r-1})}

, for 



1
≤
i
≤

n

A




{\displaystyle 1\leq i\leq n_{A}}

 and 



1
≤
j
≤

n

B




{\displaystyle 1\leq j\leq n_{B}}

.
We have therefore transformed the original system into another system where 




x

r




{\displaystyle x_{r}}

 is eliminated. Note that the output system has 



(
n
−

n

A


−

n

B


)
+

n

A



n

B




{\displaystyle (n-n_{A}-n_{B})+n_{A}n_{B}}

 inequalities. In particular, if 




n

A


=

n

B


=
n

/

2


{\displaystyle n_{A}=n_{B}=n/2}

, then the number of output inequalities is 




n

2



/

4


{\displaystyle n^{2}/4}

.
Running an elimination step over 



n


{\displaystyle n}

 inequalities can result in at most 




n

2



/

4


{\displaystyle n^{2}/4}

 inequalities in the output, thus running 



d


{\displaystyle d}

 successive steps can result in at most 



4
(
n

/

4

)


2

d






{\displaystyle 4(n/4)^{2^{d}}}

, a double exponential complexity. This is due to the algorithm producing many unnecessary constraints (constraints that are implied by other constraints). The number of necessary constraints grows as a single exponential.[1] Unnecessary constraints may be detected using linear programming.
Two "acceleration" theorems due to Imbert[2] permit the elimination of redundant inequalities based solely on syntactic properties of the formula derivation tree, thus curtailing the need to solve linear programs or compute matrix ranks.
Define the history 




H

i




{\displaystyle H_{i}}

 of an inequality 



i


{\displaystyle i}

 as the set of indexes of inequalities from the initial system 



S


{\displaystyle S}

 used to produce 



i


{\displaystyle i}

. Thus, 




H

i


=
{
i
}


{\displaystyle H_{i}=\{i\}}

 for inequalities 



i
∈
S


{\displaystyle i\in S}

 of the initial system. When adding a new inequality 



k
:

A

i


(

x

1


,
…
,

x

r
−
1


)
≤

B

j


(

x

1


,
…
,

x

r
−
1


)


{\displaystyle k:A_{i}(x_{1},\dots ,x_{r-1})\leq B_{j}(x_{1},\dots ,x_{r-1})}

 (by eliminating 




x

r




{\displaystyle x_{r}}

), the new history 




H

k




{\displaystyle H_{k}}

 is constructed as 




H

k


=

H

i


∪

H

j




{\displaystyle H_{k}=H_{i}\cup H_{j}}

.
Suppose that the variables 




O

k


=
{

x

r


,
…
,

x

r
−
k
+
1


}


{\displaystyle O_{k}=\{x_{r},\ldots ,x_{r-k+1}\}}

 have been eliminated. Each inequality 



i


{\displaystyle i}

 partitions the set 




O

k




{\displaystyle O_{k}}

 into:
A non-redundant inequality has the property that its history is minimal.[3]
Theorem (Imbert's first acceleration theorem). If the history 




H

i




{\displaystyle H_{i}}

 of an inequality 



i


{\displaystyle i}

 is minimal, then 



1
+

|


E

i



|

 
≤
 

|


H

i



|

 
≤
1
+

|

E

i


∪
(

I

i


∩

O

k


)
|



{\displaystyle 1+|E_{i}|\ \leq \ |H_{i}|\ \leq 1+\left|E_{i}\cup (I_{i}\cap O_{k})\right|}

.
An inequality that does not satisfy these bounds is necessarily redundant, and can be removed from the system without changing its solution set.
The second acceleration theorem detects minimal history sets:
Theorem (Imbert's second acceleration theorem). If the inequality 



i


{\displaystyle i}

 is such that 



1
+

|


E

i



|

=

|


H

i



|



{\displaystyle 1+|E_{i}|=|H_{i}|}

, then 




H

i




{\displaystyle H_{i}}

 is minimal.
This theorem provides a quick detection criterion and is used in practice to avoid more costly checks, such as those based on matrix ranks. See the reference for implementation details.[3]