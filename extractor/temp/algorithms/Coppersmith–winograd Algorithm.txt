ABOUT
In linear algebra, the Coppersmith–Winograd algorithm, named after Don Coppersmith and Shmuel Winograd, was the asymptotically fastest known matrix multiplication algorithm until 2010. It can multiply two 



n
×
n


{\displaystyle n\times n}

 matrices in 



O
(

n

2.375477


)


{\displaystyle O(n^{2.375477})}

 time [1] (see Big O notation). This is an improvement over the naïve 



O
(

n

3


)


{\displaystyle O(n^{3})}

 time algorithm and the 



O
(

n

2.807355


)


{\displaystyle O(n^{2.807355})}

 time Strassen algorithm. Algorithms with better asymptotic running time than the Strassen algorithm are rarely used in practice, because the large constant factors in their running times make them impractical.[2] It is possible to improve the exponent further; however, the exponent must be at least 2 (because an 



n
×
n


{\displaystyle n\times n}

 matrix has 




n

2




{\displaystyle n^{2}}

 values, and all of them have to be read at least once to calculate the exact result).
FULL TEXT
In linear algebra, the Coppersmith–Winograd algorithm, named after Don Coppersmith and Shmuel Winograd, was the asymptotically fastest known matrix multiplication algorithm until 2010. It can multiply two 



n
×
n


{\displaystyle n\times n}

 matrices in 



O
(

n

2.375477


)


{\displaystyle O(n^{2.375477})}

 time [1] (see Big O notation). This is an improvement over the naïve 



O
(

n

3


)


{\displaystyle O(n^{3})}

 time algorithm and the 



O
(

n

2.807355


)


{\displaystyle O(n^{2.807355})}

 time Strassen algorithm. Algorithms with better asymptotic running time than the Strassen algorithm are rarely used in practice, because the large constant factors in their running times make them impractical.[2] It is possible to improve the exponent further; however, the exponent must be at least 2 (because an 



n
×
n


{\displaystyle n\times n}

 matrix has 




n

2




{\displaystyle n^{2}}

 values, and all of them have to be read at least once to calculate the exact result).
In 2010, Andrew Stothers gave an improvement to the algorithm, 



O
(

n

2.374


)
.


{\displaystyle O(n^{2.374}).}

[3][4] In 2011, Virginia Williams combined a mathematical short-cut from Stothers' paper with her own insights and automated optimization on computers, improving the bound to 



O
(

n

2.3728642


)
.


{\displaystyle O(n^{2.3728642}).}

[5] In 2014, François Le Gall simplified the methods of Williams and obtained an improved bound of 



O
(

n

2.3728639


)
.


{\displaystyle O(n^{2.3728639}).}

[6]
The Coppersmith–Winograd algorithm is frequently used as a building block in other algorithms to prove theoretical time bounds. However, unlike the Strassen algorithm, it is not used in practice because it only provides an advantage for matrices so large that they cannot be processed by modern hardware.[7]
Henry Cohn, Robert Kleinberg, Balázs Szegedy and Chris Umans have re-derived the Coppersmith–Winograd algorithm using a group-theoretic construction. They also showed that either of two different conjectures would imply that the optimal exponent of matrix multiplication is 2, as has long been suspected. However, they were not able to formulate a specific solution leading to a better running-time than Coppersmith-Winograd at the time.[8]