ABOUT
Nelder–Mead simplex search over the Rosenbrock banana function (above) and Himmelblau's function (below)
FULL TEXT
Nelder–Mead simplex search over the Rosenbrock banana function (above) and Himmelblau's function (below)
The Nelder–Mead method or downhill simplex method or amoeba method is a commonly applied numerical method used to find the minimum or maximum of an objective function in a multidimensional space. It is applied to nonlinear optimization problems for which derivatives may not be known. However, the Nelder–Mead technique is a heuristic search method that can converge to non-stationary points[1] on problems that can be solved by alternative methods.[2]
The Nelder–Mead technique was proposed by John Nelder & Roger Mead (1965).[3]


The method uses the concept of a simplex, which is a special polytope of n + 1 vertices in n dimensions. Examples of simplices include a line segment on a line, a triangle on a plane, a tetrahedron in three-dimensional space and so forth.
The method approximates a local optimum of a problem with n variables when the objective function varies smoothly and is unimodal.
For example, a suspension bridge engineer has to choose how thick each strut, cable, and pier must be. These elements are interdependent, but it is not easy to visualize the impact of changing any specific element. Simulation of such complicated structures is often extremely computationally expensive to run, possibly taking upwards of hours per execution. An engineer may therefore prefer the Nelder–Mead method as it requires fewer evaluations per iteration than other optimization methods.
Nelder–Mead in n dimensions maintains a set of n+1 test points arranged as a simplex. It then extrapolates the behavior of the objective function measured at each test point, in order to find a new test point and to replace one of the old test points with the new one, and so the technique progresses. The simplest approach is to replace the worst point with a point reflected through the centroid of the remaining n points. If this point is better than the best current point, then we can try stretching exponentially out along this line. On the other hand, if this new point isn't much better than the previous value, then we are stepping across a valley, so we shrink the simplex towards a better point. An intuitive explanation of the algorithm is presented in [4]
The downhill simplex method now takes a series of steps, most steps just moving the point of the simplex where the function is largest (“highest point”) through the opposite face of the simplex to a lower point. These steps are called reflections, and they are constructed to conserve the volume of the simplex (and hence maintain its nondegeneracy). When it can do so, the method expands the simplex in one or another direction to take larger steps. When it reaches a “valley floor,” the method contracts itself in the transverse direction and tries to ooze down the valley. If there is a situation where the simplex is trying to “pass through the eye of a needle,” it contracts itself in all directions, pulling itself in around its lowest (best) point.
Unlike modern optimization methods, the Nelder–Mead heuristic can converge to a non-stationary point unless the problem satisfies stronger conditions than are necessary for modern methods.[1] Modern improvements over the Nelder–Mead heuristic have been known since 1979.[2]
Many variations exist depending on the actual nature of the problem being solved. A common variant uses a constant-size, small simplex that roughly follows the gradient direction (which gives steepest descent). Visualize a small triangle on an elevation map flip-flopping its way down a valley to a local bottom. This method is also known as the Flexible Polyhedron Method. This, however, tends to perform poorly against the method described in this article(?) because it makes small, unnecessary steps in areas of little interest.
We are trying to minimize the function 



f
(


x


)


{\displaystyle f({\mathbf {x}})}

 where 





x


∈



R



n




{\displaystyle {\mathbf {x}}\in {\mathbb {R}}^{n}}

. Our current test points are 






x



1


,
…
,



x



n
+
1




{\displaystyle {\mathbf {x}}_{1},\ldots ,{\mathbf {x}}_{n+1}}

.
Note: 



α


{\displaystyle \alpha }

, 



γ


{\displaystyle \gamma }

, 



ρ


{\displaystyle \rho }

 and 



σ


{\displaystyle \sigma }

 are respectively the reflection, expansion, contraction and shrink coefficients. Standard values are 



α
=
1


{\displaystyle \alpha =1}

, 



γ
=
2


{\displaystyle \gamma =2}

, 



ρ
=
1

/

2


{\displaystyle \rho =1/2}

 and 



σ
=
1

/

2


{\displaystyle \sigma =1/2}

.
For the reflection, since 






x



n
+
1




{\displaystyle {\textbf {x}}_{n+1}}

 is the vertex with the higher associated value among the vertices, we can expect to find a lower value at the reflection of 






x



n
+
1




{\displaystyle {\textbf {x}}_{n+1}}

 in the opposite face formed by all vertices point 






x



i




{\displaystyle {\textbf {x}}_{i}}

 except 






x



n
+
1




{\displaystyle {\textbf {x}}_{n+1}}

.
For the expansion, if the reflection point 






x



r




{\displaystyle {\textbf {x}}_{r}}

 is the new minimum along the vertices we can expect to find interesting values along the direction from 






x



o




{\displaystyle {\textbf {x}}_{o}}

 to 






x



r




{\displaystyle {\textbf {x}}_{r}}

.
Concerning the contraction: If 



f
(



x



r


)
>
f
(



x



n


)


{\displaystyle f({\textbf {x}}_{r})>f({\textbf {x}}_{n})}

 we can expect that a better value will be inside the simplex formed by all the vertices 






x



i




{\displaystyle {\textbf {x}}_{i}}

.
Finally, the shrink handles the rare case that contracting away from the largest point increases 



f


{\displaystyle f}

, something that cannot happen sufficiently close to a non-singular minimum. In that case we contract towards the lowest point in the expectation of finding a simpler landscape.
The initial simplex is important, indeed, a too small initial simplex can lead to a local search, consequently the NM can get more easily stuck. So this simplex should depend on the nature of the problem.