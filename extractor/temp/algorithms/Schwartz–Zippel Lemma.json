{
    "about": "In mathematics, the Schwartz\u2013Zippel lemma (also called the DeMillo-Lipton-Schwartz\u2013Zippel lemma) is a tool commonly used in probabilistic polynomial identity testing, i.e. in the problem of determining whether a given multivariate polynomial is the 0-polynomial (or identically equal to 0). It was discovered independently by Jack Schwartz,[1] Richard Zippel,[2] and Richard DeMillo and Richard J. Lipton, although DeMillo and Lipton's slightly weaker version was shown a year prior to Schwartz and Zippel's result.[3] The finite field version of this bound was proved by \u00d8ystein Ore in 1922.[4]", 
    "name": "Schwartz\u2013Zippel Lemma", 
    "classification": "Computer Algebra", 
    "full_text": "In mathematics, the Schwartz\u2013Zippel lemma (also called the DeMillo-Lipton-Schwartz\u2013Zippel lemma) is a tool commonly used in probabilistic polynomial identity testing, i.e. in the problem of determining whether a given multivariate polynomial is the 0-polynomial (or identically equal to 0). It was discovered independently by Jack Schwartz,[1] Richard Zippel,[2] and Richard DeMillo and Richard J. Lipton, although DeMillo and Lipton's slightly weaker version was shown a year prior to Schwartz and Zippel's result.[3] The finite field version of this bound was proved by \u00d8ystein Ore in 1922.[4]\n\n\nThe input to the problem is an n-variable polynomial over a field F. It can occur in the following forms:\nFor example, is\nTo solve this, we can multiply it out and check that all the coefficients are\u00a00. However, this takes exponential time. In general, a polynomial can be algebraically represented by an arithmetic formula or circuit.\nLet\nbe the determinant of the polynomial matrix.\nCurrently, there is no known sub-exponential time algorithm that can solve this problem deterministically. However, there are randomized polynomial algorithms for testing polynomial identities. Their analysis usually requires a bound on the probability that a non-zero polynomial will have roots at randomly selected test points. The Schwartz\u2013Zippel lemma provides this as follows:\nTheorem 1 (Schwartz, Zippel). Let\nbe a non-zero polynomial of total degree d\u00a0\u2265\u00a00 over a field,\u00a0F. Let S be a finite subset of F and let r1,\u00a0r2,\u00a0...,\u00a0rn be selected at random independently and uniformly from\u00a0S. Then\nIn the single variable case, this follows directly from the fact that a polynomial of degree d can have no more than d roots. It seems logical, then, to think that a similar statement would hold for multivariable polynomials. This is, in fact, the case.\nProof. The proof is by mathematical induction on n. For n\u00a0=\u00a01, as was mentioned before, P can have at most d roots. This gives us the base case. Now, assume that the theorem holds for all polynomials in n\u00a0\u2212\u00a01 variables. We can then consider P to be a polynomial in x1 by writing it as\nSince P is not identically 0, there is some i such that \n\n\n\n\nP\n\ni\n\n\n\n\n{\\displaystyle P_{i}}\n\n is not identically 0. Take the largest such i. Then \n\n\n\ndeg\n\u2061\n\nP\n\ni\n\n\n\u2264\nd\n\u2212\ni\n\n\n{\\displaystyle \\deg P_{i}\\leq d-i}\n\n, since the degree of \n\n\n\n\nx\n\n1\n\n\ni\n\n\n\nP\n\ni\n\n\n\n\n{\\displaystyle x_{1}^{i}P_{i}}\n\n is at most d.\nNow we randomly pick \n\n\n\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n\n\n{\\displaystyle r_{2},\\dots ,r_{n}}\n\n from S. By the induction hypothesis, \n\n\n\nPr\n[\n\nP\n\ni\n\n\n(\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n)\n=\n0\n]\n\u2264\n\n\n\nd\n\u2212\ni\n\n\n\n|\n\nS\n\n|\n\n\n\n\n.\n\n\n{\\displaystyle \\Pr[P_{i}(r_{2},\\ldots ,r_{n})=0]\\leq {\\frac {d-i}{|S|}}.}\n\n If \n\n\n\n\nP\n\ni\n\n\n(\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n)\n\u2260\n0\n\n\n{\\displaystyle P_{i}(r_{2},\\ldots ,r_{n})\\neq 0}\n\n, then \n\n\n\nP\n(\n\nx\n\n1\n\n\n,\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n)\n\n\n{\\displaystyle P(x_{1},r_{2},\\ldots ,r_{n})}\n\n is of degree i so\nIf we denote the event \n\n\n\nP\n(\n\nr\n\n1\n\n\n,\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n)\n=\n0\n\n\n{\\displaystyle P(r_{1},r_{2},\\ldots ,r_{n})=0}\n\n by A, the event \n\n\n\n\nP\n\ni\n\n\n(\n\nr\n\n2\n\n\n,\n\u2026\n,\n\nr\n\nn\n\n\n)\n=\n0\n\n\n{\\displaystyle P_{i}(r_{2},\\ldots ,r_{n})=0}\n\n by B, and the complement of B by \n\n\n\n\nB\n\nc\n\n\n\n\n{\\displaystyle B^{c}}\n\n, we have\nThe importance of the Schwartz\u2013Zippel Theorem and Testing Polynomial Identities follows from algorithms which are obtained to problems that can be reduced to the problem of polynomial identity testing.\nGiven a pair of polynomials \n\n\n\n\np\n\n1\n\n\n(\nx\n)\n\n\n{\\displaystyle p_{1}(x)}\n\n and \n\n\n\n\np\n\n2\n\n\n(\nx\n)\n\n\n{\\displaystyle p_{2}(x)}\n\n, is\nThis problem can be solved by reducing it to the problem of polynomial identity testing. It is equivalent to checking if\nHence if we can determine that\nwhere\nthen we can determine whether the two polynomials are equivalent.\nComparison of polynomials has applications for branching programs (also called binary decision diagrams). A read-once branching program can be represented by a multilinear polynomial which computes (over any field) on {0,1}-inputs the same Boolean function as the branching program, and two branching programs compute the same function if and only if the corresponding polynomials are equal. Thus, identity of Boolean functions computed by read-once branching programs can be reduced to polynomial identity testing.\nComparison of two polynomials (and therefore testing polynomial identities) also has applications in 2D-compression, where the problem of finding the equality of two 2D-texts A and B is reduced to the problem of comparing equality of two polynomials \n\n\n\n\np\n\nA\n\n\n(\nx\n,\ny\n)\n\n\n{\\displaystyle p_{A}(x,y)}\n\n and \n\n\n\n\np\n\nB\n\n\n(\nx\n,\ny\n)\n\n\n{\\displaystyle p_{B}(x,y)}\n\n.\nGiven \n\n\n\nn\n\u2208\n\n\nZ\n\n+\n\n\n\n\n\n{\\displaystyle n\\in \\mathbb {Z^{+}} }\n\n, is \n\n\n\nn\n\n\n{\\displaystyle n}\n\n a prime number?\nA simple randomized algorithm developed by Manindra Agrawal and Somenath Biswas can determine probabilistically whether \n\n\n\nn\n\n\n{\\displaystyle n}\n\n is prime and uses polynomial identity testing to do so.\nThey propose that all prime numbers n (and only prime numbers) satisfy the following polynomial identity:\nThis is a consequence of the Frobenius endomorphism.\nLet\nThen \n\n\n\n\n\n\nP\n\n\n\nn\n\n\n(\nz\n)\n=\n0\n\n(\n\nmod\n\n\nn\n)\n\n\n{\\displaystyle {\\mathcal {P}}_{n}(z)=0\\;({\\mbox{mod}}\\;n)}\n\n iff n is prime. The proof can be found in [4]. However, since this polynomial has degree \n\n\n\nn\n\n\n{\\displaystyle n}\n\n, and since \n\n\n\nn\n\n\n{\\displaystyle n}\n\n may or may not be a prime, the Schwartz\u2013Zippel method would not work. Agrawal and Biswas use a more sophisticated technique, which divides \n\n\n\n\n\n\nP\n\n\n\nn\n\n\n\n\n{\\displaystyle {\\mathcal {P}}_{n}}\n\n by a random monic polynomial of small degree.\nPrime numbers are used in a number of applications such as hash table sizing, pseudorandom number generators and in key generation for cryptography. Therefore, finding very large prime numbers (on the order of (at least) \n\n\n\n\n10\n\n350\n\n\n\u2248\n\n2\n\n1024\n\n\n\n\n{\\displaystyle 10^{350}\\approx 2^{1024}}\n\n) becomes very important and efficient primality testing algorithms are required.\nLet \n\n\n\nG\n=\n(\nV\n,\nE\n)\n\n\n{\\displaystyle G=(V,E)}\n\n be a graph of n vertices where n is even. Does G contain a perfect matching?\nTheorem 2 (Tutte 1947): A Tutte matrix determinant is not a 0-polynomial if and only if there exists a perfect matching.\nA subset D of E is called a matching if each vertex in V is incident with at most one edge in D. A matching is perfect if each vertex in V has exactly one edge that is incident to it in D. Create a Tutte matrix A in the following way:\nwhere\nThe Tutte matrix determinant (in the variables xij, \n\n\n\ni\n<\nj\n\n\n{\\displaystyle i<j}\n\n ) is then defined as the determinant of this skew-symmetric matrix which coincides with the square of the pfaffian of the matrix A and is non-zero (as polynomial) if and only if a perfect matching exists. One can then use polynomial identity testing to find whether G contains a perfect matching. There exists a deterministic black-box algorithm for graphs with polynomially bounded permanents (Grigoriev & Karpinski 1987).[5]\nIn the special case of a balanced bipartite graph on \n\n\n\nn\n=\nm\n+\nm\n\n\n{\\displaystyle n=m+m}\n\n vertices this matrix takes the form of a block matrix\nif the first m rows (resp. columns) are indexed with the first subset of the bipartition and the last m rows with the complementary subset. In this case the pfaffian coincides with the usual determinant of the m \u00d7 m matrix X (up to sign). Here X is the Edmonds matrix.", 
    "dbpedia_url": "http://dbpedia.org/resource/Schwartz\u2013Zippel_lemma", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Schwartz\u2013Zippel_lemma\n"
}